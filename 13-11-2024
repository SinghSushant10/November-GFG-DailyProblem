#Intersection Point in Y Shaped Linked Lists

class Intersect {
    // Function to find intersection point in Y shaped Linked Lists.
    int intersectPoint(Node head1, Node head2) {
        // code here
        Node temp1=head1;
        Node temp2=head2;
        while(true){
        // If both pointers are pointing to the same node, we've found the intersection
            if(temp1==temp2) return temp1.data;
            temp1=temp1.next;
            temp2=temp2.next;
        // If both pointers reach the end of their lists without intersection, return -1
            if(temp1==null && temp2==null) return -1;
        // If temp1 reaches the end of the first list, switch it to the head of the second list
            if(temp1==null) temp1=head2;
        // If temp2 reaches the end of the second list, switch it to the head of the first list
            if(temp2==null) temp2=head1;
        }
    }
}
