#Smallest Positive Missing Number
#You are given an integer array arr[]. Your task is to find the smallest positive number missing from the array.
Note: Positive number starts from 1. The array can have negative integers too.
Examples:
Input: arr[] = [2, -3, 4, 1, 1, 7]
Output: 3
Explanation: Smallest positive missing number is 3.

TC:O(n) SC:O(1)
class Solution {
    // Function to find the smallest positive number missing from the array.
    public int missingNumber(int[] arr) {
        // Your code here
        int n =arr.length;
        for(int i=0;i<n;i++){
            while(arr[i]>=1 && arr[i]<=n && arr[i]!=arr[arr[i]-1]){
                int temp=arr[i];
                arr[i]= arr[arr[i]-1];
                arr[temp-1]=temp;
            }
        }
        for(int i=1;i<=n;i++){
            if(i!=arr[i-1]) {
                return i;
            }
        }
        return n+1; 
      
        
    }
}

TC:O(n) SC:O(n)

//  Map<Integer,Integer> map= new HashMap<>();
//       for(int x: arr){
//           map.put(x,map.getOrDefault(x,0)+1);
//       }
//         int ans=1;
//         while(map.containsKey(ans)){
            
//             ans++;
//         }
//         return ans;
